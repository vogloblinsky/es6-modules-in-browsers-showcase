function qs(a,b){return(b||document).querySelector(a)}function qsa(a,b){return(b||document).querySelectorAll(a)}function $on(a,b,c,d){a.addEventListener(b,c,!!d)}function $delegate(a,b,c,d){$on(a,c,function(c){var e=c.target,f=qsa(b,a),g=0<=Array.prototype.indexOf.call(f,e);g&&d.call(e,c)},'blur'===c||'focus'===c)}function $parent(a,b){return a.parentNode?a.parentNode.tagName.toLowerCase()===b.toLowerCase()?a.parentNode:$parent(a.parentNode,b):void 0}function remove(a,b){const c=a.indexOf(b);return-1===c?a:void a.splice(c,1)}NodeList.prototype.forEach=Array.prototype.forEach;class View{constructor(a){this.template=a,this.ENTER_KEY=13,this.ESCAPE_KEY=27,this.$todoList=qs('.todo-list'),this.$todoItemCounter=qs('.todo-count'),this.$clearCompleted=qs('.clear-completed'),this.$main=qs('.main'),this.$footer=qs('.footer'),this.$toggleAll=qs('.toggle-all'),this.$newTodo=qs('.new-todo')}_removeItem(a){var b=qs('[data-id="'+a+'"]');b&&this.$todoList.removeChild(b)}_clearCompletedButton(a,b){this.$clearCompleted.innerHTML=this.template.clearCompletedButton(a),this.$clearCompleted.style.display=b?'block':'none'}_editItemDone(a,b){var c=qs('[data-id="'+a+'"]');if(c){var d=qs('input.edit',c);c.removeChild(d),c.className=c.className.replace('editing',''),qsa('label',c).forEach(function(a){a.textContent=b})}}render(a,b){var c=this;({showEntries:function(){c.$todoList.innerHTML=c.template.show(b)},removeItem:function(){c._removeItem(b)},updateElementCount:function(){c.$todoItemCounter.innerHTML=c.template.itemCounter(b)},clearCompletedButton:function(){c._clearCompletedButton(b.completed,b.visible)},contentBlockVisibility:function(){c.$main.style.display=c.$footer.style.display=b.visible?'block':'none'},toggleAll:function(){c.$toggleAll.checked=b.checked},setFilter:function(){_setFilter(b)},clearNewTodo:function(){c.$newTodo.value=''},elementComplete:function(){_elementComplete(b.id,b.completed)},editItem:function(){_editItem(b.id,b.title)},editItemDone:function(){c._editItemDone(b.id,b.title)}})[a]()}_bindItemEditDone(a){var b=this;$delegate(b.$todoList,'li .edit','blur',function(){this.dataset.iscanceled||a({id:_itemId(this),title:this.value})}),$delegate(b.$todoList,'li .edit','keypress',function(a){a.keyCode===b.ENTER_KEY&&this.blur()})}_bindItemEditCancel(a){var b=this;$delegate(b.$todoList,'li .edit','keyup',function(c){c.keyCode===b.ESCAPE_KEY&&(this.dataset.iscanceled=!0,this.blur(),a({id:_itemId(this)}))})}bind(a,b){var c=this;'newTodo'===a?$on(c.$newTodo,'change',function(){b(c.$newTodo.value)}):'removeCompleted'===a?$on(c.$clearCompleted,'click',function(){b()}):'toggleAll'===a?$on(c.$toggleAll,'click',function(){b({completed:this.checked})}):'itemEdit'===a?$delegate(c.$todoList,'li label','dblclick',function(){b({id:_itemId(this)})}):'itemRemove'===a?$delegate(c.$todoList,'.destroy','click',function(){b({id:_itemId(this)})}):'itemToggle'===a?$delegate(c.$todoList,'.toggle','click',function(){b({id:_itemId(this),completed:this.checked})}):'itemEditDone'===a?c._bindItemEditDone(b):'itemEditCancel'===a&&c._bindItemEditCancel(b)}}function _setFilter(a){qs('.filters .selected').className='',qs('.filters [href="#/'+a+'"]').className='selected'}function _elementComplete(a,b){var c=qs('[data-id="'+a+'"]');c&&(c.className=b?'completed':'',qs('input',c).checked=b)}function _editItem(a,b){var c=qs('[data-id="'+a+'"]');if(c){c.className+=' editing';var d=document.createElement('input');d.className='edit',c.appendChild(d),d.focus(),d.value=b}}function _itemId(a){var b=$parent(a,'li');return parseInt(b.dataset.id,10)}function Controller$1(a,b){var c=this;c.model=a,c.view=b,c.view.bind('newTodo',function(a){c.addItem(a)}),c.view.bind('itemEdit',function(a){c.editItem(a.id)}),c.view.bind('itemEditDone',function(a){c.editItemSave(a.id,a.title)}),c.view.bind('itemEditCancel',function(a){c.editItemCancel(a.id)}),c.view.bind('itemRemove',function(a){c.removeItem(a.id)}),c.view.bind('itemToggle',function(a){c.toggleComplete(a.id,a.completed)}),c.view.bind('removeCompleted',function(){c.removeCompletedItems()}),c.view.bind('toggleAll',function(a){c.toggleAll(a.completed)})}Controller$1.prototype.setView=function(a){var b=a.split('/')[1];this._updateFilterState(b||'')},Controller$1.prototype.showAll=function(){var a=this;a.model.read(function(b){a.view.render('showEntries',b)})},Controller$1.prototype.showActive=function(){var a=this;a.model.read({completed:!1},function(b){a.view.render('showEntries',b)})},Controller$1.prototype.showCompleted=function(){var a=this;a.model.read({completed:!0},function(b){a.view.render('showEntries',b)})},Controller$1.prototype.addItem=function(a){var b=this;''===a.trim()||b.model.create(a,function(){b.view.render('clearNewTodo'),b._filter(!0)})},Controller$1.prototype.editItem=function(a){var b=this;b.model.read(a,function(c){b.view.render('editItem',{id:a,title:c[0].title})})},Controller$1.prototype.editItemSave=function(a,b){var c=this;b.trim()?c.model.update(a,{title:b},function(){c.view.render('editItemDone',{id:a,title:b})}):c.removeItem(a)},Controller$1.prototype.editItemCancel=function(a){var b=this;b.model.read(a,function(c){b.view.render('editItemDone',{id:a,title:c[0].title})})},Controller$1.prototype.removeItem=function(a){var b=this;b.model.remove(a,function(){b.view.render('removeItem',a)}),b._filter()},Controller$1.prototype.removeCompletedItems=function(){var a=this;a.model.read({completed:!0},function(b){b.forEach(function(b){a.removeItem(b.id)})}),a._filter()},Controller$1.prototype.toggleComplete=function(a,b,c){var d=this;d.model.update(a,{completed:b},function(){d.view.render('elementComplete',{id:a,completed:b})}),c||d._filter()},Controller$1.prototype.toggleAll=function(a){var b=this;b.model.read({completed:!a},function(c){c.forEach(function(c){b.toggleComplete(c.id,a,!0)})}),b._filter()},Controller$1.prototype._updateCount=function(){var a=this;a.model.getCount(function(b){a.view.render('updateElementCount',b.active),a.view.render('clearCompletedButton',{completed:b.completed,visible:0<b.completed}),a.view.render('toggleAll',{checked:b.completed===b.total}),a.view.render('contentBlockVisibility',{visible:0<b.total})})},Controller$1.prototype._filter=function(a){var b=this._activeRoute.charAt(0).toUpperCase()+this._activeRoute.substr(1);this._updateCount(),(a||'All'!==this._lastActiveRoute||this._lastActiveRoute!==b)&&this['show'+b](),this._lastActiveRoute=b},Controller$1.prototype._updateFilterState=function(a){a=a.split('?')[0],this._activeRoute=a,''===a&&(this._activeRoute='All'),this._filter(),this.view.render('setFilter',a)};function Model$1(a){this.storage=a}Model$1.prototype.create=function(a,b){a=a||'',b=b||function(){};var c={title:a.trim(),completed:!1};this.storage.save(c,b)},Model$1.prototype.read=function(a,b){var c=typeof a;return(b=b||function(){},'function'==c)?(b=a,this.storage.findAll(b)):void('string'==c||'number'==c?(a=parseInt(a,10),this.storage.find({id:a},b)):this.storage.find(a,b))},Model$1.prototype.update=function(a,b,c){this.storage.save(b,c,a)},Model$1.prototype.remove=function(a,b){this.storage.remove(a,b)},Model$1.prototype.removeAll=function(a){this.storage.drop(a)},Model$1.prototype.getCount=function(a){var b={active:0,completed:0,total:0};this.storage.findAll(function(c){c.forEach(function(a){a.completed?b.completed++:b.active++,b.total++}),a(b)})};function Store$1(a,b){if(b=b||function(){},this._dbName=a,!localStorage[a]){localStorage[a]=JSON.stringify({todos:[]})}b.call(this,JSON.parse(localStorage[a])),this.subscribers=[]}Store$1.prototype.subscribe=function(a){return this.subscribers.push(a),()=>remove(this.subscribers,a)},Store$1.prototype._notify=function(){this.subscribers.forEach((a)=>a())},Store$1.prototype.find=function(a,b){if(b){var c=JSON.parse(localStorage[this._dbName]).todos;b.call(this,c.filter(function(b){for(var c in a)if(a[c]!==b[c])return!1;return!0}))}},Store$1.prototype.findAll=function(a){a=a||function(){},a.call(this,JSON.parse(localStorage[this._dbName]).todos)},Store$1.prototype.save=function(a,b,c){var d=JSON.parse(localStorage[this._dbName]),e=d.todos;if(b=b||function(){},c){for(var f=0;f<e.length;f++)if(e[f].id===c){for(var g in a)e[f][g]=a[g];break}localStorage[this._dbName]=JSON.stringify(d),b.call(this,JSON.parse(localStorage[this._dbName]).todos)}else a.id=new Date().getTime(),e.push(a),localStorage[this._dbName]=JSON.stringify(d),b.call(this,[a]);this._notify()},Store$1.prototype.remove=function(a,b){for(var c=JSON.parse(localStorage[this._dbName]),d=c.todos,e=0;e<d.length;e++)if(d[e].id===a){d.splice(e,1);break}localStorage[this._dbName]=JSON.stringify(c),b.call(this,JSON.parse(localStorage[this._dbName]).todos),this._notify()},Store$1.prototype.drop=function(a){localStorage[this._dbName]=JSON.stringify({todos:[]}),a.call(this,JSON.parse(localStorage[this._dbName]).todos),this._notify()};var htmlEscapes={"&":'&amp;',"<":'&lt;',">":'&gt;','"':'&quot;',"'":'&#x27;',"`":'&#x60;'},escapeHtmlChar=function(a){return htmlEscapes[a]},reUnescapedHtml=/[&<>"'`]/g,reHasUnescapedHtml=new RegExp(reUnescapedHtml.source),escape=function(a){return a&&reHasUnescapedHtml.test(a)?a.replace(reUnescapedHtml,escapeHtmlChar):a};function Template$1(){this.defaultTemplate=`
    <li data-id="{{id}}" class="{{completed}}">
      <div class="view">
        <input class="toggle" type="checkbox" {{checked}} />
        <label>{{title}}</label>
        <button class="destroy"></button>
      </div>
    </li>
  `}Template$1.prototype.show=function(a){var b,c,d='';for(b=0,c=a.length;b<c;b++){var e=this.defaultTemplate,f='',g='';a[b].completed&&(f='completed',g='checked'),e=e.replace('{{id}}',a[b].id),e=e.replace('{{title}}',escape(a[b].title)),e=e.replace('{{completed}}',f),e=e.replace('{{checked}}',g),d+=e}return d},Template$1.prototype.itemCounter=function(a){var b=1===a?'':'s';return'<strong>'+a+'</strong> item'+b+' left'},Template$1.prototype.clearCompletedButton=function(a){return 0<a?'Clear completed':''};let todo;const subscribers=[];function Todo(a){this.storage=new Store$1(a),this.model=new Model$1(this.storage),this.template=new Template$1,this.view=new View(this.template),this.controller=new Controller$1(this.model,this.view)}function updateTodo(){todo=new Todo('todos-vanillajs'),todo.controller.setView(document.location.hash),subscribers.forEach((a)=>a())}function onLoad(){updateTodo()}$on(window,'load',onLoad),$on(window,'hashchange',onLoad);